/*
 * Copyright 2020 Simone Sestito
 * This file is part of Shops Queue.
 *
 * Shops Queue is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Shops Queue is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Shops Queue.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'
    ndkVersion '21.1.6352462'

    defaultConfig {
        applicationId 'com.simonesestito.shopsqueue'
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName '1.0'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    viewBinding {
        enabled = true
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
    implementation "com.google.android.material:material:$versions.material"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$versions.swiperefresh"
    implementation "androidx.security:security-crypto:$versions.crypto"

    // Lifecycle libs
    implementation "androidx.lifecycle:lifecycle-viewmodel:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
    implementation "android.arch.lifecycle:common-java8:$versions.lifecycle"

    // Navigation libs
    implementation "androidx.navigation:navigation-fragment:$versions.navigation"
    implementation "androidx.navigation:navigation-ui:$versions.navigation"

    // Dagger
    implementation "com.google.dagger:dagger:$versions.dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$versions.dagger"

    // Retrofit
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttpLog"

    // Mapbox
    implementation "com.mapbox.mapboxsdk:mapbox-android-sdk:$versions.mapbox"
    implementation "com.mapbox.mapboxsdk:mapbox-android-plugin-annotation-$versions.mapboxSuffix:$versions.mapboxAnnotation"
    implementation "com.mapbox.mapboxsdk:mapbox-android-plugin-places-$versions.mapboxSuffix:$versions.mapboxPlaces"

    // Play Services
    implementation "com.google.android.gms:play-services-location:$versions.playServicesLocation"
    implementation "com.google.android.gms:play-services-oss-licenses:$versions.licensesLib"

    // Firebase
    implementation "com.google.firebase:firebase-messaging:$versions.firebaseFcm"

    // Testing libs
    testImplementation "junit:junit:$versions.junit"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "org.powermock:powermock-module-junit4:$versions.powermock"
    testImplementation "org.powermock:powermock-api-mockito2:$versions.powermock"
    androidTestImplementation "androidx.test.ext:junit:$versions.junitExt"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
}
